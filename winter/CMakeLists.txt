cmake_minimum_required(VERSION 3.20)
set(CMAKE_CXX_STANDARD 20)
project("winter" VERSION 1.0 LANGUAGES CXX)
message("CMake Version: " ${CMAKE_VERSION})
if(${CMAKE_SOURCE_DIR} STREQUAL ${CMAKE_BINARY_DIR})
	message(FATAL_ERROR "In-source builds are not supported. Please choose a different binary directory.")
	return()
endif()

if (CMAKE_VERSION VERSION_GREATER_EQUAL "3.24.0")
	cmake_policy(SET CMP0135 NEW)
endif()
include(FetchContent)
string(REPLACE "/Zi" "/Z7" CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG}")
string(REPLACE "/Zi" "/Z7" CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG}")
string(REPLACE "/Zi" "/Z7" CMAKE_C_FLAGS_RELWITHDEBINFO "${CMAKE_C_FLAGS_RELWITHDEBINFO}")
string(REPLACE "/Zi" "/Z7" CMAKE_CXX_FLAGS_RELWITHDEBINFO "${CMAKE_CXX_FLAGS_RELWITHDEBINFO}")
if(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
	set( CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -fPIC" )
	set( CMAKE_C_FLAGS  "${CMAKE_C_FLAGS} -fPIC" )
endif()

set(CMAKE_EXPORT_COMPILE_COMMANDS TRUE)

add_subdirectory(Code)